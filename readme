# EventHub 项目 README

## 一、项目简介

EventHub 是一个基于 Flask + SQLAlchemy 的全栈活动管理系统，支持普通用户浏览/搜索/报名活动，组织者登录后可以发布、编辑、取消活动，并进行报名审批、退款等操作；同时集成了演示性质的支付功能和“高级搜索”模块。

主要模块包括：
1. **首页 / 活动列表**：显示即将举办的活动，支持关键字、分类、日期、价格筛选，并分页加载。
2. **活动详情 & 报名**：点击“View Details”可查看单个活动详情，普通用户提交报名后自动生成通知。
3. **用户仪表盘 (My Events)**：查看当前用户所有已报名活动及状态。
4. **组织者后台**：组织者登录后可发布/编辑/删除活动，并管理报名（批准/拒绝/退款）。
5. **高级搜索**：新增 `/advanced/events` 页面，可按日期、地点、价格区间、分类进行多维度筛选。
6. **模拟支付**：新增 `/advanced/payment/<event_id>` 页面和 `/advanced/payment/checkout` 接口，演示如何接入 Stripe 测试环境。
7. **实时剩余票数查询**：提供 `/advanced/api/events/<event_id>/remaining` 接口，前端可轮询实时更新剩余票数。
8. **测试数据生成**：新增 `/advanced/generate-test-data` 接口，一键生成开发环境下的测试组织者、活动、报名和通知。

## 二、目录结构

eventhub_project/
├── app.py
├── advanced.py
├── models.py
├── requirements.txt
├── README.md
├── templates/
│ ├── index.html
│ ├── event-details.html
│ ├── user-dashboard.html
│ ├── organizer-login.html
│ ├── profile.html
│ ├── settings.html
│ └── advanced/
│ ├── advanced-events.html
│ ├── advanced-payment.html
│ ├── advanced-manage-registrations.html
│ └── advanced-manage-edit-event.html
└── static/
├── css/
│ ├── styles.css
│ ├── home.css
│ ├── user-dashboard.css
│ ├── profile.css
│ ├── settings.css
│ └── …（其他 CSS 文件）
├── js/
│ ├── dataservice.js
│ ├── data.js
│ ├── home.js
│ ├── login.js
│ ├── user-dashboard.js
│ ├── profile.js
│ ├── settings.js
│ └── …（其他 JS 文件）
└── images/
└── …（活动封面、头像占位图等）
└── advanced/
├── css/
│ ├── advanced-events.css
│ ├── advanced-manage.css
│ └── …（其他 CSS 文件）
└── js/
├── advanced-events.js
├── advanced-manage-registrations.js
└── …（其他 JS 文件）

## 三、功能概览

1. **基础功能（app.py）**
   - `/`：首页，显示活动列表，支持筛选、分页加载。
   - `/event-details?id=<event_id>`：活动详情页，展示活动信息并可提交报名。
   - `/api/events`：活动列表 API（支持 `?category=`、`?date=` 筛选），POST 接口可创建新活动。
   - `/api/events/<event_id>`：单个活动 CRUD 接口。
   - `/login`、`/logout`：普通用户登录/登出。
   - `/user-dashboard`：用户仪表盘页，展示该用户所有报名。
   - `/profile`、`/settings`：用户资料与设置页面，支持本地存储方式的演示修改。
   - `/organizer-login`：组织者登录页，仅 role="organizer" 可登录。
   - `/organizer-dashboard`、`/organizer-events`、`/organizer-create-event`：组织者专属页面，用于发布/管理活动。
   - `/api/users`、`/api/users/<user_id>`：用户 CRUD 接口；`/api/organizers`、`/api/organizers/<org_id>`：组织者 CRUD 接口。
   - `/api/registrations`、`/api/registrations/<reg_id>`：报名 CRUD 接口，自动扣票/退票并生成通知。
   - `/api/notifications`、`/api/notifications/<notif_id>`：通知 CRUD 接口。

2. **高级功能（advanced.py Blueprint，URL 前缀 `/advanced`）**
   - **多维度搜索**
     - 页面：`GET /advanced/events` → `advanced-events.html`。
     - 接口：`GET /advanced/api/events?category=&date=&location=&price_min=&price_max=` → 返回过滤后活动列表 JSON。
   - **模拟支付**
     - 支付页：`GET /advanced/payment/<event_id>` → `advanced-payment.html`。
     - 支付回调：`POST /advanced/payment/checkout` → 模拟 Stripe 支付，更新票数并生成报名+通知。
   - **报名审批与管理后台**
     - 管理页：`GET /advanced/manage/registrations` → `advanced-manage-registrations.html`。
     - 列表 API：`GET /advanced/api/manage/registrations` → 返回所有报名。
     - Approve：`POST /advanced/api/manage/registrations/<reg_id>/approve` → 批准报名并发送通知。
     - Reject：`POST /advanced/api/manage/registrations/<reg_id>/reject` → 退票、删除报名并发送通知。
   - **活动编辑与取消**
     - 编辑页：`GET /advanced/manage/events/<event_id>/edit` → `advanced-manage-edit-event.html`。
     - 更新：`POST /advanced/manage/events/<event_id>/edit` → 更新活动信息，并可上传新封面。
     - 取消：`POST /advanced/manage/events/<event_id>/cancel` → 给所有报名用户发取消通知、退票并删除活动。
   - **实时剩余票数查询**
     - 接口：`GET /advanced/api/events/<event_id>/remaining` → 返回 `{general_remaining, vip_remaining}` 可用于前端轮询。
   - **测试数据生成（仅开发环境）**
     - `GET /advanced/generate-test-data` → 使用 Faker 自动生成 10 个组织者、50 个活动、若干用户及报名和通知。

## 四、安装与运行

1. **克隆项目并创建虚拟环境**
   ```bash
   git clone https://github.com/your_username/eventhub_project.git
   cd eventhub_project
   python -m venv venv
   source venv/bin/activate      # Linux/macOS
   venv\Scripts\activate.bat     # Windows
pip install --upgrade pip
pip install -r requirements.txt
python app.py

！！！数据库配置修改在app.py 数据库sql文件放在根目录下 sql后缀
-